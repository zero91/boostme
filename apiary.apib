FORMAT: 1A

# BmWeb
Android、JS与 *Boostme Web* 的接口文档。

线上机器及端口号： **www.boostme.cn:80**。

线下联调机器及端口号： **www.boostme.cn:9501**。

以下接口不区分线上线下机器，统一使用SITE_URL表示。例如，www.boostme.cn:80/user/login，表示为{SITE_URL}/user/login

# User API Root [/user]

## Group User
user相关API。


## User Login [/user/ajax_login]
用户登录

### Login [POST]
请求参数:
+ username (string) - 用户昵称
+ password (string) - 登录密码
+ code (string) - 登录验证码，是系统配置而定。系统需要使用验证码，则需要增加此字段。目前无须验证码
+ forward (string) - 跳转页面，可选

返回值:
+ success - 操作结果，true为操作成功，false为操作失败
+ forward - 用户登录成功后，需要跳转的页面对象[success=true]
+ user - 登录用户详细信息[success=true]
+ error - 错误码 [success=false]

error错误码含义:
+ 101 - 用户名存在，但密码错误
+ 102 - 用户名不存在
+ 103 - 验证码错误
+ 104 - 用户已登录

+ Request (application/json)

        {
            "username": "test001",
            "password" : "test001",
            "code" : "0Ar4",
            "forward" : "http://www.boostme.cn/material/default"
        }

+ Response 200 (application/json)

        {
            "success": true,
            "forward" : "http://www.boostme.cn/material/default",
            "user" : {
                "uid": "59",
                "username": "test001",
                "password": "fa820cc1ad39a4e99283e9fa555035ec",
                "avatar" : "http://www.boostme.cn:9507/public/css/default/avatar.png",
                "email": "test001@bm.cn",
                "regtime": "1410264721",
                "regip": "61.135.169.74",
                "lastlogin": "1423321676",
                "gender": "0",
                "signature": null,
                "problems": "0",
                "solved": "0",
                "failed": "0",
                "can_teach": "0",
                "teach_level": "0",
                "credit": "0",
                "paid": "0",
                "earned": "0",
                "questions": "0",
                "balance": "0.01",
                "answers": "0",
                "userpoint": "0",
            }
        }

## User Logout [/user/ajax_logout]
用户登出。

### Logout [POST]
无请求参数

返回值:
+ success - 操作结果，true为操作成功，false为操作失败
+ error - 错误码 [success=false]

error错误码含义:
+ 101 - 当前系统不存在此登录用户

+ Request (application/json)

        { }

+ Response 200 (application/json)

        { "success": true }


## User Register [/user/ajax_register]
注册用户。

### Register [POST]
请求参数:
+ username - 用户名
+ password - 密码
+ email - 邮箱
+ code - 验证码，依系统配置是否需要。当前配置为需要填验证码
+ invite_code - 邀请码，可选
+ forward - 注册成功后的跳转页面，可选

返回值:
+ success - 操作结果，true为操作成功，false为操作失败
+ uid - 新增加的用户ID号[success=true]
+ forward - 注册成功后的跳转页面[success=true]
+ error - 错误码 [success=false]

error错误码含义:
+ 101 - 用户已登录
+ 102 - 系统注册功能暂时处于关闭状态
+ 103 - 当前IP已经超过当日最大注册数目
+ 104 - 用户名或密码不能为空
+ 105 - 邮件地址不合法
+ 106 - 用户名已存在
+ 107 - 此邮件地址已经注册
+ 108 - 用户名不合法
+ 109 - 验证码错误

+ Request (application/json)

        {
            "username": "test999",
            "password" : "test999",
            "email" : "test999@bm.cn",
            "code" : "0Ar4",
            "forward" : "http://www.boostme.cn/material/default"
        }

+ Response 200 (application/json)

        { "success": true, "uid" : 148 }


# Question/Answer API Root [/question]

## Group Question
question相关API。

## Question Info [/question/ajax_fetch_info]
一个question具有如下属性：
+ qid
+ author
+ authorid
+ title
+ description
+ time
+ update_time
+ answers
+ attentions - 关注此问题的用户数量
+ views
+ status - 问题状态，暂定为：未通过审核、通过审核等
+ format_time - 格式化为可读性较强的time字段
+ format_update_time - 格式化为可读性较强的update_time字段

### 获取资料详细信息 [GET]
请求参数:
+ qid (int) - question ID号

error错误码含义:
+ 101 - 无效参数

+ Request (application/json)

        { "qid": 1 }
        
+ Response 200 (application/json)

        {
            "success": true,
            "question": {
                "qid" : "1",
                "author": "摇滚骄子",
                "authorid": "3",
                "title": "大家看一下 这个这个题目怎么做？",
                "description": "<p>a+b=x+y怎么解</p>",
                "time": "1411974863",
                "update_time": "1414299118",
                "answers": "5",
                "attentions": "3",
                "views": "0",
                "status": "0",
                "format_time": "2014/09/29 15:14",
                "format_update_time": "2014/10/26 12:51"
            }
        }

+ Request (application/json)

        { "qid": "invalid" }

+ Response 200 (application/json)

        { "success": true, "error": 101 }

## Question Collection [/question/ajax_fetch_list]
每个question出还有上面单个Question的信息，另外增加了下面的字段，以让问题作为列表展示时，能够更美观。
+ strip_description - 抽取掉HTML tag标签之后的问题描述
+ images - 问题描述中，还有的image列表

### 获取问题列表 [GET]
请求参数:
+ page (int) - 请求的页号，可选

+ Request (application/json)

        { "page": 1 }

+ Response 200 (application/json)

        {
            "success": true,
            "question_num": 50,
            "question_list": [
                {
                    "qid" : "1",
                    "author": "摇滚骄子",
                    "authorid": "3",
                    "title": "大家看一下 这个这个题目怎么做？",
                    "description": "<p>a+b=x+y怎么解</p>",
                    "time": "1411974863",
                    "update_time": "1414299118",
                    "answers": "5",
                    "attentions": "3",
                    "views": "0",
                    "status": "0",
                    "format_time": "2014/09/29 15:14",
                    "format_update_time": "2014/10/26 12:51",
                    "avatar": "http://www.boostme.cn:9507/public/data/avatar/000/000/00/small_0000000001.jpg",
                    "strip_description": "这是抽取掉tag的description",
                    "images": [
                        "<img src='http://www.boostme.cn:9507/public/data/attach/1502/n0TkbApA.png' title='31.png'/>",
                        "<img src='http://www.boostme.cn:9507/public/data/attach/1502/NrPvhtEj.png' title='122.png'/>",
                        "<img src='http://www.boostme.cn:9507/public/data/attach/1502/aLrRKURS.png' style='float:none;' title='193.png'/>",
                        "<img src='http://www.boostme.cn:9507/public/data/attach/1502/1NnsZWYL.png' style='float:none;' title='683.png'/>"
                    ]
                }
            ]
        }

## Question Collection For Refresh [/question/ajax_fetch_list_by_update_time]
此接口类似于Question Collection的接口。不同的地方在于此处主要用于用户在刷新的时候获取数据使用。

### 获取刷新的问题列表 [GET]
请求参数:
+ req_num (int) - 请求的最多条数
+ req_type (string) - 请求的数据类型
    + new表示获取比update_time时间更新的Question，此时获取的Question按照时间戳从小到大，也即越来越新
    + old表示获取比update_time时间更老的Question，此时获取的Question按照时间戳从大到小，也即越来越旧
+ update_time (int) - Question的更新时间戳

+ Request (application/json)

        {
            "req_num": 1,
            "req_type" : "new",
            "update_time": 1414299117
        }

+ Response 200 (application/json)

        {
            "success": true,
            "question_list": [
                {
                    "qid" : "1",
                    "author": "摇滚骄子",
                    "authorid": "3",
                    "title": "大家看一下 这个这个题目怎么做？",
                    "description": "<p>a+b=x+y怎么解</p>",
                    "time": "1411974863",
                    "update_time": "1414299118",
                    "answers": "5",
                    "attentions": "3",
                    "views": "0",
                    "status": "0",
                    "format_time": "2014/09/29 15:14",
                    "format_update_time": "2014/10/26 12:51",
                    "avatar": "http://www.boostme.cn:9507/public/data/avatar/000/000/00/small_0000000001.jpg",
                    "strip_description": "这是抽取掉tag的description",
                    "images": [
                        "<img src='http://www.boostme.cn:9507/public/data/attach/1502/n0TkbApA.png' title='31.png'/>",
                        "<img src='http://www.boostme.cn:9507/public/data/attach/1502/NrPvhtEj.png' title='122.png'/>",
                        "<img src='http://www.boostme.cn:9507/public/data/attach/1502/aLrRKURS.png' style='float:none;' title='193.png'/>",
                        "<img src='http://www.boostme.cn:9507/public/data/attach/1502/1NnsZWYL.png' style='float:none;' title='683.png'/>"
                    ]
                }
            ]
        }

## Add New Question [/question/ajax_add]
新增一个question。

### 增加一个新问题 [POST]
请求参数:
+ title (string) - 标题
+ content (string) - 详细内容
+ code (string) - 验证码，视系统配置决定，目前不需要验证码，但后续可能会加上

返回值:
+ success - 操作结果，true为操作成功，false为操作失败
+ id - 新增question的ID号 [success=true]
+ forward - 新增question的网页查看链接 [success=true]
+ error - 错误码 [success=false]

error错误码含义:
+ 101 - 用户尚未登录
+ 102 - 验证码错误
+ 103 - 参数无效

+ Request (application/json)

        { "title": "测试", "content" : "测试添加新问题" }
        
+ Response 201 (application/json)

        {
            "success": true,
            "id": "123", 
            "forward" : "http://www.boostme.cn/question/view/123"
        }

+ Request (application/json)

        { "title": "测试添加失败", "content" : "若此时用户尚未登录" }

+ Response 200 (application/json)

        { "success": false, "error": 101 }

## Group Answer [/answer]
answer相关资源API。

## Answer Info [/answer/ajax_fetch_info]
一个answer具有如下属性：
+ id
+ qid
+ author
+ authorid
+ title
+ time
+ content
+ comments - 此回复的评论总数
+ supports - 此回复的支持总数
+ format_time - 格式化为可读性较强的time字段

### 获取回复详细信息 [GET]
请求参数:
+ aid (int) - answer ID号

error错误码含义:
+ 101 - 回复id参数无效

+ Request (application/json)

        { "aid": 2 }
        
+ Response 200 (application/json)

        {
            success: true,
            answer: {
                id: "2",
                qid: "1",
                author: "摇滚骄子",
                authorid: "3",
                title: "小伙伴们，论坛的功能我已经初步完成了，大家用用反馈一下意见",
                time: "1411974738",
                content: "<p>我擦</p>",
                comments: "2",
                supports: "0",
                format_time: "2014/09/29 15:12"
            }
        }

+ Request (application/json)

        { "aid": -1 }
 
+ Response 200 (application/json)

        { success: true, error : 101 }

## Answer Collection [/answer/ajax_fetch_list]

### 获取问题回复列表 [GET]
请求参数:
+ qid (int) - question ID号

error错误码含义:
+ 101 - 帖子id参数无效

+ Request (application/json)

        { "qid": 1 }
        
+ Response 200 (application/json)

        {
            success: true,
            answer_list: [
                {
                    id: "1",
                    qid: "1",
                    title: "小伙伴们，论坛的功能我已经初步完成了，大家用用反馈一下意见",
                    author: "admin",
                    authorid: "1",
                    time: "1411958835",
                    content: "<p>我顶</p>",
                    comments: "1",
                    supports: "0",
                    format_time: "2014/09/29 10:47"
                }, {
                    id: "5",
                    qid: "1",
                    title: "小伙伴们，论坛的功能我已经初步完成了，大家用用反馈一下意见",
                    author: "jews1990",
                    authorid: "5",
                    time: "1412952459",
                    content: "<p>再顶</p>",
                    comments: "1",
                    supports: "0",
                    format_time: "2014/10/10 22:47"
                }
            ]
        }

+ Request (application/json)

        { "qid": 1 }
 
+ Response 200 (application/json)

        {
            "success": false, "error": "101"
        }

## Add New Answer [/question/ajax_answer]
新增一个answer。

### 增加一个新回复 [POST]
请求参数:
+ qid (int) - question ID号
+ content (string) - 回复内容
+ code (string) - 验证码，视系统配置决定，目前不需要验证码，但后续可能会加上

返回值:
+ success - 操作结果，true为操作成功，false为操作失败
+ aid - 新增answer的ID号 [success=true]
+ forward - 新增answer所属question的网页查看链接 [success=true]
+ error - 错误码 [success=false]

error错误码含义:
+ 101 - 用户尚未登录
+ 102 - 提交回答失败,帖子不存在
+ 103 - 验证码错误
+ 104 - 回复内容不能为空

+ Request (application/json)

        { "qid": "123", "content" : "这是我的测试回复。" }
        
+ Response 201 (application/json)

        {
            "success": true,
            "aid": "332", 
            "forward" : "http://www.boostme.cn/question/view/123"
        }

+ Request (application/json)

        { "qid": "测试回复失败", "content" : "若此时用户尚未登录" }

+ Response 200 (application/json)

        { "success": false, "error": 101 }

## Add Comment [/answer/ajax_add_comment]
新增一个answer的评论。

### 增加一个新回复 [POST]
请求参数:
+ answerid (int) - answer ID号
+ content (string) - 回复内容

返回值:
+ success - 操作结果，true为操作成功，false为操作失败
+ id - 新增answer的comment ID号 [success=true]
+ error - 错误码 [success=false]

error错误码含义:
+ 101 - 用户尚未登录
+ 102 - answer不存在，answerid无效

+ Request (application/json)

        { "answerid": "33", "content" : "Hello World" }
        
+ Response 201 (application/json)

        { "success": true, "id": 19 }

+ Request (application/json)

        { "answerid": "abcd", "content" : "Hello World" }

+ Response 200 (application/json)

        { "success": false, "error": 102 }


# Service API Root [/service]

## Group Service 
service相关API。

## Serivce Info [/service/ajax_fetch_info]
一个service具有如下属性：
+ id
+ uid
+ username
+ price - 收费价格
+ service_content - 服务具体内容内容
+ service_time - 服务时长
+ status - 服务状态，一般分为：是否通过审核、通过审核等
+ avg_score - 平均服务得分
+ time
+ service_num - 到目前为止，一定服务成功的数量
+ comment_num - 评论数
+ view_num - 浏览量
+ avatar - 用户头像
+ format_time - 格式化为可读性较强的time字段

@Future: 细化和明确service服务内容，让其更加标准化且容易衡量

### 获取service详细信息 [GET]
请求参数:
+ service_id (int) - service ID号

error错误码含义:
+ 101 - 无效参数

+ Request (application/json)

        { "service_id": 23 }
        
+ Response 200 (application/json)

        {
            "success": true,
            "service": {
                "id": "23",
                "uid": "1",
                "username": "admin",
                "price": "48",
                "service_content": "测试服务",
                "status": "2",
                "avg_score": "3.5",
                "time": "1417274748",
                "service_num": "1",
                "comment_num": "0",
                "view_num": "24",
                "service_time": "15",
                "format_time": "2014/11/29 23:25",
                "avatar": "http://www.boostme.cn:9507/public/css/default/avatar.png",
                "cid_list": [
                    {
                        "id": "67",
                        "service_id": "23",
                        "region_id": "R01",
                        "school_id": "S010001",
                        "dept_id": "D010001001",
                        "major_id": "M01000100101"
                    }
                ],
                "edu_list": [
                    {
                        "eid": "54",
                        "uid": "1",
                        "edu_type": "6",
                        "school": "北京大学",
                        "department": "软件学院",
                        "major": "自然语言处理",
                        "start_time": "2012-09-01",
                        "end_time": "2014-07-02"
                    }
                ]
            }
        }

+ Request (application/json)

        { "service_id": "invalid" }

+ Response 200 (application/json)

        { "success": false, "error": 101 }

## Service Collection [/service/ajax_fetch_list]
获取类别下的service列表。

### 获取service列表 [GET]
请求参数:
+ region_id (string) - 地区ID号，可选
+ school_id (string) - 学校ID号，可选
+ dept_id (string) - 院系ID号，可选
+ major_id (string) - 专业ID号，可选
+ page (int) - 请求的页号，可选

+ Request (application/json)

        { "region_id" : "R01", "school_id" : "S010002", "page": 1 }

+ Response 200 (application/json)

        {
            "success": true,
            "service_list": [
                {
                    "id": "31",
                    "uid": "87",
                    "username": "test010",
                    "avatar": "/public/data/service/0000000087.jpg",
                    "price": "0.2",
                    "service_content": "北大教育学院各专业的详细情况，研究生导师的联系等服务",
                    "status": "2",
                    "avg_score": "4.5",
                    "time": "1417970807",
                    "service_num": "3",
                    "comment_num": "1",
                    "view_num": "25",
                    "format_time": "2014/12/08 00:46"
                }
            ]
        }

## Comment Collection [/service/ajax_fetch_comment]
### 获取service评论信息[GET]
请求参数:
+ service_id (int) - service ID号
+ page (int) - 页码，可选

返回值:
+ success - 操作结果，true为操作成功，false为操作失败
+ tot_num - 全部评论数量 [success=true]
+ comment_list - 评论列表 [success=true]
+ error - 错误码 [success=false]

error错误码含义:
+ 101 - 无效参数

+ Request (application/json)

        { "service_id": 32, "page" : 1 }
        
+ Response 200 (application/json)

        {
            "success": true,
            "tot_num": "1",
            "comment_list": [
                {
                    "id": "19",
                    "authorid": "1",
                    "author": "admin",
                    "sid": "32",
                    "score": "3.5",
                    "content": "测试账户金额",
                    "time": "1417972798",
                    "up": "0",
                    "down": "0",
                    "format_time": "2014/12/08 01:19",
                    "avatar": "http://www.boostme.cn:9507/public/css/default/avatar.png"
                }
            ]
        }

## Add Comment [/service/ajax_add_comment]
### 为service添加评论信息[POST]
请求参数:
+ service_id (int) - service ID号
+ content (string) - 服务内容
+ score (int) - service评分

返回值:
+ success - 操作结果，true为操作成功，false为操作失败
+ comment_id - 新增comment的ID号 [success=true]
+ error - 错误码 [success=false]

error错误码含义:
+ 101 - 用户尚未登
+ 102 - 无效参数
+ 103 - 用户历史已经评论过
+ 104 - 数据库添加失败

+ Request (application/json)

        { "service_id": 32, "content" : "testing", "score" : 5 }
        
+ Response 200 (application/json)

        { "success": true, "comment_id": "31" }


# Material API Root [/material]

## Group Material
material相关API。

## Material Info [/material/ajax_fetch_info]
一个material具有如下属性：
+ id
+ uid
+ username
+ price - 价格
+ title - 资料标题
+ status - 资料状态，一般分为：是否通过审核、通过审核等
+ avg_score - 平均服务得分
+ time
+ sold_num - 到目前为止，总计售出数量
+ comment_num - 评论数
+ view_num - 浏览量

### 获取material详细信息 [GET]
请求参数:
+ mid (int) - material ID号

返回值:
+ success - 操作结果，true为操作成功，false为操作失败
+ material - 资料详细信息[success=true]
+ error - 错误码 [success=false]

error错误码含义:
+ 101 - 无效参数

+ Request (application/json)

        { "mid": 45 }
        
+ Response 200 (application/json)

        {
            success: true,
            material: {
                id: "45",
                uid: "1",
                username: "admin",
                title: "帅哥一枚，甩卖",
                description: "<p>asdf asdf asdf </p>",
                price: "1.99",
                time: "1418705763",
                status: "2",
                avg_score: "0",
                sold_num: "0",
                comment_num: "0",
                picture: "/public/data/material/3a66404af133f3c6yz.jpg",
                view_num: "28",
                site_url: "http://pan.baidu.com/s/1sjwh2mp",
                access_code: "5sl6",
                auto_delivery: "0",
                type: "major"
            }
        }

+ Request (application/json)

        { "mid": "invalid" }

+ Response 200 (application/json)

        { "success": false, "error": 101 }

## Material Collection [/material/ajax_fetch_list]
获取类别下的material列表。

### 获取material列表 [GET]
请求参数:
+ type (string) - 资料类型
+ region_id (string) - 地区ID号，可选
+ school_id (string) - 学校ID号，可选
+ dept_id (string) - 院系ID号，可选
+ major_id (string) - 专业ID号，可选
+ page (int) - 请求的页号，可选

资料类型（type）：
+ major - 专业课
+ english - 英语
+ politics - 政治
+ math - 数学

返回值:
+ success - 操作结果，true为操作成功，false为操作失败
+ material_list - 资料列表[success=true]
+ start - 资料起始序号[success=true]

+ Request (application/json)

        { "type" : "math", "region_id" : "R01", "page": 1 }

+ Response 200 (application/json)

        {
            success: true,
            start: 1,
            material_list: [
                {
                    id: "8",
                    uid: "1",
                    username: "admin",
                    title: "Boostme支付手段测试资料",
                    description: "",
                    price: "0.01",
                    time: "1414213758",
                    status: "2",
                    avg_score: "0",
                    sold_num: "0",
                    comment_num: "0",
                    picture: "/public/data/material/f812df56885aa8c0HF.jpg",
                    view_num: "7",
                    site_url: "http://pan.baidu.com/s/1sjwh2mp",
                    access_code: "5sl6",
                    auto_delivery: "0",
                    type: "math",
                    format_time: "2014/10/25 13:09",
                    desc_content: "",
                    desc_images:[]
                }
        }

## Comment Collection [/material/ajax_fetch_comment]
### 获取material评论信息[GET]
请求参数:
+ id (int) - material ID号
+ page (int) - 页码，可选

返回值:
+ success - 操作结果，true为操作成功，false为操作失败
+ tot_num - 全部评论数量 [success=true]
+ comment_list - 评论列表 [success=true]
+ error - 错误码 [success=false]

error错误码含义:
+ 101 - 无效参数

+ Request (application/json)

        { "id": 7, "page" : 1 }
        
+ Response 200 (application/json)

        {
            success: true,
            tot_num: "1",
            comment_list: [
                {
                    id: "28",
                    mid: "7",
                    authorid: "1",
                    author: "admin",
                    content: "asdfasdfsdf ",
                    time: "1431259563",
                    up: "0",
                    down: "0",
                    score: "4",
                    avatar: "http://localhost/public/css/default/avatar.png"
                }
            ]
        }

## Add Comment [/material/ajax_add_comment]
### 为material添加评论信息[POST]
请求参数:
+ mid (int) - material ID号
+ content (string) - 评论内容
+ score (int) - material评分

返回值:
+ success - 操作结果，true为操作成功，false为操作失败
+ id - 新增comment的ID号 [success=true]
+ error - 错误码 [success=false]

error错误码含义:
+ 101 - 用户尚未登
+ 102 - 数据库添加失败

+ Request (application/json)

        { "mid": 32, "score" : 5, "content" : "testing" }
        
+ Response 200 (application/json)

        { "success": true, "id": "31" }

# Message API Root [/message]

## Group Message
message相关API。

## System Message Collection [/message/ajax_fetch_system]
获取类别下的service列表。

### 获取系统消息列表 [GET]
请求参数:
+ page (int) - 请求的页号，可选

+ Request (application/json)

        { "page": 1 }

+ Response 200 (application/json)

        {
            "success": true,
            "msg_list": [
                {
                    "mid": "190",
                    "from": "Boostme管理员",
                    "fromuid": "0",
                    "touid": "1",
                    "new": "1",
                    "subject": "测试系统消息标题一",
                    "content": "测试系统消息内容一",
                    "time": "1428218739",
                    "format_time": "2015/04/05 15:25"
                }, {
                    "mid": "187",
                    "from": "Boostme管理员",
                    "fromuid": "0",
                    "touid": "1",
                    "new": "0",
                    "subject": "测试系统消息标题二",
                    "content": "测试系统消息内容二",
                    "time": "1428205138",
                    "format_time": "2015/04/05 11:38"
                }
            ]
        }

# Trade API Root [/trade]

## Group Trade
订单交易相关API。

## Trade Collection [/trade/ajax_fetch_list]
获取用户历史订单列表。

### 获取用户历史订单列表 [GET]
请求参数:
+ page (int) - 请求的页号，可选

返回值:
+ success - 操作结果，true为操作成功，false为操作失败
+ trade_list - 用户历史订单列表。[success=true]
    + tot_price - 订单总价格
    + trade_info - 订单详细信息
        + type - 物品类型，1为资料，2为服务
        + target_id - 物品ID号，与type一起，用于确定物品
        + target_info - 物品的详细信息
+ error - 错误码 [success=false]

error错误码含义:
+ 101 - 用户尚未登录

+ Request (application/json)

        { "page": 1 }

+ Response 200 (application/json)
        {
            "success": true,
            "trade_list": [
                {
                    "trade_no": "142217059781fafd3517b49f00V7yHrq",
                    "uid": "1",
                    "username": "admin",
                    "tot_price": "0.04",
                    "status": "1",
                    "goods_num": "0",
                    "trade_total_fee": "0",
                    "trade_discount": null,
                    "trade_type": null,
                    "trade_mode": "0",
                    "time": "1422170597",
                    "transaction_id": null,
                    "pay_account": null,
                    "format_time": "2015/01/25 15:23",
                    "trade_info": [
                        {
                            "trade_no": "142217059781fafd3517b49f00V7yHrq",
                            "target_id": "44",
                            "type": "1",
                            "buy_num": "2",
                            "time": "0",
                            "uid": "1",
                            "username": "admin",
                            "target_info": {
                                "id": "44",
                                "uid": "1",
                                "username": "admin",
                                "title": "考研一共花了多少钱？大家都来交（tu）流（cao）一下~~~",
                                "description": "",
                                "price": "0.02",
                                "time": "1417866489",
                                "status": "2",
                                "avg_score": "0",
                                "sold_num": "0",
                                "comment_num": "0",
                                "picture": "/public/data/material/20141206194809CEE.",
                                "view_num": "20",
                                "site_url": "http://pan.baidu.com/s/1sjwh2mp",
                                "access_code": "5sl6",
                                "auto_delivery": "0"
                            }
                        }
                    ]
                }
            ]
        }


## Trade Info [/trade/ajax_fetch_info]
获取用户某订单的详细信息。

### 获取用户某订单的详细信息 [GET]
请求参数:
+ trade_no (string) - 订单号

返回值:
+ success - 操作结果，true为操作成功，false为操作失败
+ trade_status - 订单状态 [success=true]
+ trade_info_list - 用户历史订单列表。[success=true]
    + type - 物品类型，1为资料，2为服务
    + target_id - 物品ID号，与type一起，用于确定物品
    + target_info - 物品的详细信息
+ error - 错误码 [success=false]

trade_status(订单状态)各数字表示含义：
+ 1 - 等待付款
+ 2 - 等待发货
+ 3 - 等待确认收货
+ 4 - 交易成功结束
+ 5 - 交易未成功完成

error错误码含义:
+ 101 - 用户尚未登录
+ 102 - 无效参数
+ 103 - 用户无权操作

+ Request (application/json)

        { "trade_no": "142217059781fafd3517b49f00V7yHrq" }

+ Response 200 (application/json)
        {
            "success": true,
            "trade_status": "4",
            "trade_info_list": [
                {
                    "trade_no": "142217059781fafd3517b49f00V7yHrq",
                    "target_id": "44",
                    "type": "1",
                    "buy_num": "2",
                    "time": "0",
                    "uid": "1",
                    "username": "admin",
                    "target_info": {
                        "id": "44",
                        "uid": "1",
                        "username": "admin",
                        "title": "考研一共花了多少钱？大家都来交（tu）流（cao）一下~~~",
                        "description": "",
                        "price": "0.02",
                        "time": "1417866489",
                        "status": "2",
                        "avg_score": "0",
                        "sold_num": "0",
                        "comment_num": "0",
                        "picture": "/public/data/material/20141206194809CEE.",
                        "view_num": "20",
                        "site_url": "http://pan.baidu.com/s/1sjwh2mp",
                        "access_code": "5sl6",
                        "auto_delivery": "0"
                    }
                }
            ]
        }


## Add Item [/trade/ajax_add_item]
增加新物品到购物车。

### 新增物品到购物车 [POST]
请求参数:
+ target_id (int) - 新增物品的ID号
+ type (int) - 新增物品的类型，1为资料，2为服务
+ quantity (int) - 购买数量

返回值:
+ success - 操作结果，true为操作成功，false为操作失败
+ trade_no - 订单号 [success=true]
+ error - 错误码 [success=false]

error错误码含义:
+ 101 - 用户尚未登录
+ 102 - 无效参数
+ 103 - 添加失败

+ Request (application/json)

        { "target_id": 21, "type": 2, "quantity": 1 }

+ Response 200 (application/json)

        {
            "success": "true",
            "trade_no": "143005326330e684b742abc311scy2cZ"
        }


## Remove Item [/trade/ajax_remove_item]
删除购物车中某物品。

### 删除购物车中某物品 [POST]
请求参数:
+ trade_no - 订单号
+ target_id - 待删除物品的ID号
+ type - 待删除物品的类型，1为资料，2为服务

返回值:
+ success - 操作结果，true为操作成功，false为操作失败
+ error - 错误码 [success=false]

error错误码含义:
+ 101 - 用户尚未登录
+ 102 - 无效参数
+ 103 - 用户无权删除该订单物品
+ 104 - 删除失败

+ Request (application/json)

        { "target_id": 21, "ype": 2, "trade_no": "143005326330e684b742abc311scy2cZ" }

+ Response 200 (application/json)

        { "success": "true" }


## Tradeno [/trade/ajax_fetch_tradeno]
获取一个订单号。如果当前没有用户未使用的订单号，则新增一个订单号；否则使用用户还未付款订单的订单号。

### 获取订单号 [GET]
返回值:
+ success - 操作结果，true为操作成功，false为操作失败
+ trade_no - 订单号 [success=true]
+ error - 错误码 [success=false]

error错误码含义:
+ 101 - 用户尚未登录

+ Request (application/json)

        { }

+ Response 200 (application/json)

        {
            "success": "true",
            "trade_no": "143005326330e684b742abc311scy2cZ"
        }


## Update Quantity [/trade/ajax_update_quantity]
更新订单单个项目的数量。

### 更新订单单个项目数量 [POST]
请求参数:
+ trade_no - 订单号
+ target_id - 待更改项的ID号
+ type - 待更改项的类型
+ quantity - 待更改项的新数量

返回值:
+ success - 操作结果，true为操作成功，false为操作失败
+ error - 错误码 [success=false]

error错误码含义:
+ 101 - 用户尚未登录
+ 102 - 无效参数
+ 103 - 用户无权操作
+ 104 - 更新失败

+ Request (application/json)

        {
            "target_id": 21,
            "type": 2,
            "trade_no": "143005326330e684b742abc311scy2cZ",
            "quantity": 10
        }

+ Response 200 (application/json)

        { "success": "true" }

